#version 430
layout(local_size_x = 256) in;

struct Particle {
    vec3 position;
    vec3 velocity;
    float life;
};

layout(std430, binding = 0) buffer ParticleBuffer {
    Particle particles[];
};

uniform float dt;
uniform vec3 wind;

void main() {
    uint idx = gl_GlobalInvocationID.x;
    Particle p = particles[idx];

    // Update particle velocity based on wind
    p.velocity += wind * dt;

    // Update particle position
    p.position += p.velocity * dt;

    // Decrease particle lifetime
    p.life -= 0.01 * dt;

    // Reset particles that expire
    if (p.life <= 0.0) {
        p.position = vec3(0.0);
        p.velocity = vec3(0.0);
        p.life = 1.0;
    }

    // Write updated particle back to buffer
    particles[idx] = p;
}